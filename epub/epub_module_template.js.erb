var EpubModule = function(packageDocumentObject, packageDocumentXML) {
    
    var Epub = {};

    // Rationale: The order of these matters
    <%= manifest_item %>
    <%= manifest %>
    <%= metadata %>
    <%= page_spread_property %>
    <%= spine_item %>
    <%= spine %>
    <%= package_document %>

    var packageDoc = new Epub.PackageDocument({ 
        packageDocumentObject : packageDocumentObject,
        packageDocument : packageDocumentXML
    });

    // Description: The public interface
    return {

        getSpineInfo : function () { return packageDoc.getSpineInfo.call(packageDoc); },
        isFixedLayout : function () { return packageDoc.isFixedLayout.call(packageDoc); },
        getManifestItemById : function (id) { return packageDoc.getManifestItemById.call(packageDoc, id); },
        getManifestItemByIdref : function (idref) { return packageDoc.getManifestItemByIdref.call(packageDoc, idref); }, 
        getSpineItemByIdref : function (idref) { return packageDoc.getSpineItemByIdref.call(packageDoc, idref); },
        getSpineItemByIndex : function (spineIndex) { return packageDoc.getSpineItem.call(packageDoc, spineIndex); }, 
        spineLength : function () { return packageDoc.spineLength.call(packageDoc); }, 
        getNextLinearSpinePosition : function (currSpineIndex) { return packageDoc.getNextLinearSpinePosition.call(packageDoc, currSpineIndex); },
        getPrevLinearSpinePosition : function (currSpineIndex) { return packageDoc.getPrevLinearSpinePosition.call(packageDoc, currSpineIndex); }, 
        hasNextSection : function (currSpineIndex) { return packageDoc.hasNextSection.call(packageDoc, currSpineIndex); }, 
        hasPrevSection : function (currSpineIndex) { return packageDoc.hasPrevSection.call(packageDoc, currSpineIndex); }, 
        pageProgressionDirection : function () { return packageDoc.pageProgressionDirection.call(packageDoc); },
        getSpineIndexByHref : function (manifestHref) { return packageDoc.getSpineIndexByHref.call(packageDoc, manifestHref); },
        getPackageDocumentDOM : function () { return packageDoc.getPackageDocumentDOM.call(packageDoc); },
        getToc : function () { return packageDoc.getToc.call(packageDoc); }
    };
};